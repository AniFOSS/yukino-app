name: Changelogs

on:
    workflow_dispatch:
    release:
        types:
            - published

jobs:
    changelogs:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v2

            - uses: actions/setup-node@v2
              with:
                  node-version: 14.x

            - name: Install dependencies
              run: yarn --dev

            - name: Update changes
              uses: actions/github-script@v4
              env:
                  DISCORD_RELEASE_HOOK: ${{ secrets.DISCORD_RELEASE_HOOK }}
              with:
                  script: |
                      const path = require("path");
                      const fs = require("fs");
                      const got = require("got").default;
                      const getChanges = require("./scripts/utils/get-changes");

                      const res = await got.get(`https://api.github.com/repos/${context.repo.owner}/${context.repo.repo}/releases?per_page=2`);
                      const [previous, latest] = JSON.parse(res.body).sort((a, b) => new Date(a.created_at).getTime() - new Date(b.created_at).getTime());
                      const allChanges = await getChanges({
                            repo: {
                                author: context.repo.owner,
                                repo: context.repo.repo,
                            },
                            version: {
                                previous: previous.tag_name,
                                current: latest.tag_name,
                            },
                      });

                      const foundAsset = latest.assets.find(x => x.name === "changelogs.json");
                      await github.request({
                          method: foundAsset ? "PATCH" : "POST",
                          url: foundAsset ? foundAsset.url : latest.upload_url,
                          headers: {
                              "content-type": "text/plain",
                          },
                          data: JSON.stringify(allChanges),
                          name: "changelogs.json"
                      });

                      const { features, fixes, refactors } = allChanges;
                      const changes = [];
                      if (features.length || fixes.length || refactors.length) {
                          changes.push(`**Changelogs**`);
                          if (features.length) {
                              changes.push(`\nFeatures:`);
                              changes.push(...features.map(x => `- ${x}`));
                          }

                          if (fixes.length) {
                              changes.push(`\nFixes:`);
                              changes.push(...fixes.map(x => `- ${x}`));
                          }

                          if (refactors.length) {
                              changes.push(`\nChanges:`);
                              changes.push(...refactors.map(x => `- ${x}`));
                          }
                      }

                      const logs = changes.join("\n");
                      await got.post(process.env.DISCORD_RELEASE_HOOK, {
                          headers: {
                              "Content-Type": "application/json"
                          },
                          body: JSON.stringify({
                              username: "Yukino - Releases",
                              avatar_url: "https://github.com/zyrouge/yukino-app/blob/next/resources/icon.png?raw=true",
                              embeds: [
                                  {
                                      title: `v${latest.id}`,
                                      url: latest.html_url,
                                      color: 6514417,
                                      description: logs,
                                      timestamp: new Date().toISOString()
                                  }
                              ]
                          })
                      });

                      let body = latest.body || "";
                      const changelogsRegex = /(\*\*Changelogs\*\*[\s\S]+)/;
                      if (changelogsRegex.test(body)) {
                          if (!logs) body = body.replace(changelogsRegex, "");
                          else body = body.replace(changelogsRegex, logs);
                      } else {
                          if (logs) body += `\n\n${logs}`;
                      }

                      await github.request("POST /repos/{owner}/{repo}/releases/{release_id}", {
                          ...context.repo,
                          release_id: latest.id,
                          body
                      });
